@startuml
skinparam object {
ArrowColor DarkBlue
}

skinparam stereotypeCBackgroundColor LightBlue

object Survey

entity Client <<Entity>> <<Root>>

object Contact <<Value Object>>

object PhoneNumber <<Value Object>>

object EmailAddress <<Value Object>>

object Name <<Value Object>>

object Gender <<Value Object>>

object Address <<Value Object>>

object Birthday <<Value Object>>



/' Client '/
Client --- "1" Contact : preferredContact >
Client -- "1" Name : identifiedBy >
Client --  Contact : contacts
Client -- "1" Gender : identifiedBy >
Client -- "1" Address : residence>
Client -- "1" Birthday : dateOfBirth>
Contact <|-- PhoneNumber
Contact <|-- EmailAddress
Client -- "1" Survey : answers >




entity Product <<Entity>> <<Root>>

object PriceTableID <<Value Object>>

object PriceTable <<Entity>>

object SalesRegion <<Entity>>

object Category <<Value Object>>

object ProductPriceDetail

object Price <<Value Object>>

object Barcode <<Value Object>>

object Picture <<Value Object>>

object Brand <<Value Object>>

object ProductItem <<Value Object>>

Class Quantity <<Value Object>>

object Weight <<Value Object>>



/' Product '/
Product --- "1" Category: categorized >
Product --- "1" Price: has >
Product --- "1..*" Picture: has >
Product --- "1" Barcode: has >
Product --- "1" Brand: has >
ProductPriceDetail -- "1" Product: >
ProductPriceDetail --- "1..*" PriceTable: >
PriceTable --- "1" PriceTableID: >
PriceTable --- "1" SalesRegion: >
Survey --- "1" Product: about  >
Product --- "1" ProductItem: becomes >
ProductItem --- "1" Quantity: has >




    entity Warehouse <<Entity>> <<Root>>{
    -Row
    -Shelf
    -Aisle
    }

    object AGV <<Entity>>{
    -Autonomy
    -State
    }

object Route <<Value Object>>

object Plan <<Value Object>>



/' Warehouse '/

Warehouse -- "1..*" AGV: has >
AGV -- "1..*" Route: has >
Warehouse -- "1" Plan: >



entity Order <<Entity>> <<Root>>

object DateTime <<Value Object>>

object OrderID <<Value Object>>

    object Status <<Entity>>{
    -State
    }

object PaymentMethod <<Value Object>>

    object ShippingMethod <<Value Object>>{
    -Type
    }

object ShippingCost <<ValueObject>>




/' Order '/
Order --- "1" OrderID : >
Order --- "1" DateTime : >
Order --- "1" Status : has >
Order --- "1" PaymentMethod : has >
Order --- "1" ShippingMethod : has >
Order --- "1" Survey : generates >
ShippingCost --- "1" SalesRegion: depends >
Product --- "1" Weight: has >


object ShoppingCart <<Value Object>>

/' ShoppingCart '/
ShoppingCart --- "1..*" ProductItem: has >

object Catalog

/' Catalog '/
Client --- "1..*" Catalog: sees >
Catalog --- "1..*" Product: has >


/' Joined Aggregates '/
Client -- "1..*" Order: orders >
Client -- "1..*" Product: chooses >
Warehouse -- "*" Product: saves >
@enduml