# US1001
=======================================


# 1. Requirements



**1001** As Sales Clerk, I want to specify a new product for sale.

##Acceptance Criteria

* A product must have:
> photo: it might be of any common format (e.g. png, jpeg, svg);
>
> short description: not empty having 30 chars maximum;
>
> extended description: not empty with a minimum of 20 chars and 100 chars maximum;
>
> technical description: multiple lines of text, preferably with no limit or the biggest possible.
>
> brand: not empty having 50 chars maximum;
>
> reference: not empty alphanumeric code with at 23 chars maximum;
>
> production code: not empty alphanumeric code with at 23 chars maximum however it might meet a given regular expression defined/configured at deployment time.
>
> internal code: not empty alphanumeric code with at 23 chars maximum however it might meet a given regular expression defined/configured at deployment time.
>
> Mandatory attributes: internal code, short and extended description.


Question 2: Still regarding the barcode should the identifier be sequential, if not what method should we use to generate the identifier?

Q2. Barcodes are manually introduced by users since each product barcode is provided by the product manufacture.

# 2. Analysis

*Neste secção a equipa deve relatar o estudo/análise/comparação que fez com o intuito de tomar as melhores opções de design para a funcionalidade bem como aplicar diagramas/artefactos de análise adequados.*

*Recomenda-se que organize este conteúdo por subsecções.*

# 3. Design

>   Classes do domínio: Product
>
>   Controlador: SpecifyNewProductController
>
>   Repository: ProductRepository


## 3.1. Functionality Realization

![SSD](US1001_SSD.svg)
![SD](US1001_SD.svg)

## 3.2. Class Diagram

*Nesta secção deve apresentar e descrever as principais classes envolvidas na realização da funcionalidade.*

## 3.3. Applied Patterns

*Nesta secção deve apresentar e explicar quais e como foram os padrões de design aplicados e as melhores práticas.*

## 3.4. Tests
*Nesta secção deve sistematizar como os testes foram concebidos para permitir uma correta aferição da satisfação dos requisitos.*

**Teste 1:** Verificar que não é possível criar uma instância da classe Exemplo com valores nulos.

	@Test(expected = IllegalArgumentException.class)
		public void ensureNullIsNotAllowed() {
		Exemplo instance = new Exemplo(null, null);
	}

# 4. Implementation

*Nesta secção a equipa deve providenciar, se necessário, algumas evidências de que a implementação está em conformidade com o design efetuado. Para além disso, deve mencionar/descrever a existência de outros ficheiros (e.g. de configuração) relevantes e destacar commits relevantes;*

*Recomenda-se que organize este conteúdo por subsecções.*

# 5. Demonstration

*Nesta secção a equipa deve descrever os esforços realizados no sentido de integrar a funcionalidade desenvolvida com as restantes funcionalidades do sistema.*

# 6. Observations

*Nesta secção sugere-se que a equipa apresente uma perspetiva critica sobre o trabalho desenvolvido apontando, por exemplo, outras alternativas e ou trabalhos futuros relacionados.*



