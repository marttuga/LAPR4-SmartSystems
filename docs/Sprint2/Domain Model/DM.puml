@startuml
skinparam object {
ArrowColor DarkBlue
}

skinparam stereotypeCBackgroundColor LightBlue


package Category <<Aggregate>> {
    entity Category <<Entity>>

    object AlphaNumericCode <<Value Object>>

    object Description <<Value Object>>
}


package Product <<Aggregate>>{

entity Product <<Entity>> <<Root>> {
- shortDescription
- extendedDescription
- technicalDescription
}
object Volume <<ValueObject>>
object ProductPriceDetail <<ValueObject>>



object Barcode <<Value Object>>

object Picture <<Value Object>>

object Brand <<Value Object>>





object Weight <<Value Object>>

object Dimensions <<Value Object>>{
- Width
- Height
- Length
}

object Reference <<Value Object>>

object UniqueInternalCode <<Value Object>>
}

/' OrderManagement '/
package Order <<Aggregate>>{
entity Order <<Entity>> <<Root>>{
- DateTime
}
object PriceOrder <<ValueObject>>
object OrderActor <<Value Object>>{
- id
- actor
}

object LineOrder <<Value Object>>{
- PriceWithoutTax
}

entity PriceTable <<Entity>>

object PriceTableID <<Value Object>>

object SalesRegion <<Value Object>>

object OrderID <<Value Object>>



object PaymentMethod <<Value Object>>

object ShippingCost <<ValueObject>>




   object ShippingMethod <<Value Object>>

     object Status <<Value Object>>
}


package Customer <<Aggregate>>{
entity Customer <<Entity>> <<Root>>

object CustomerId <<ValueObject>>

object PhoneNumber <<Value Object>>

object EmailAddress <<Value Object>>

object Name <<Value Object>>

object Gender <<Value Object>>

object PostalAddress <<ValueObject>> {
- street
- doorNumber
- city
- country
- postalCode
}

object BirthDate <<Value Object>>

object VATIdentifier <<Value Object>>

}

'SHOPPING CART'
package ShoppingCart <<Aggregate>>{
entity ShoppingCart <<Entity>> <<Root>>
object ShoppingCartID <<Value Object>>
entity ProductItem <<Entity>>
object Quantity <<Value Object>>
object ProductItemID <<Value Object>>
object PriceItem <<Value Object>>
}
/' WarehouseManagement '/
 package Warehouse <<Aggregate>>{

 entity Warehouse <<Entity>> <<Root>>{
     -Row
     -Shelf
     -Aisle
     }

    object Plan <<ValueObject>>

    entity Location <<Entity>>

     object StorageArea <<ValueObject>> {
         -AisleId
         -RowId
         -ShelfId
         }

 }

 object AGV_Warehouse <<ValueObject>>

package AGV <<Aggregate>>{
 entity AGV <<Entity>>{
     -Autonomy
     -AGVDescription
     }

     object Route <<Value Object>>

     object Identifier <<Value Object>>

     object Model <<ValueObject>>

     object MaxWeightCarry <<ValueObject>>

     object AGVDock <<ValueObject>>

     entity Task <<Entity>>
}


/' Survey '/
package Survey <<Aggregate>>{

    Entity Survey <<Entity>> {
    }

object SurveyAlphaNumericCode <<ValueObject>>

object SurveyDescription <<ValueObject>>

object SurveyPeriod <<ValueObject>>

object SurveyRule <<ValueObject>>

object Topic <<ValueObject>>

}
object GeneralQuestions  <<ValueObject>>
/'Question'/
package Question <<Aggregate>>{
entity Question <<Entity>>

entity Answer <<Entity>>

object Type <<Value Object>>{
{Multiple Choice}
{Free Answer}
{Ordering}
}
}

package SystemUser <<Aggregate>>{
entity User <<Entity>>

object Username <<ValueObject>>

object Password <<ValueObject>>
}



/' User '/
User -- Username : has >
User -- Password : has >
User --- Customer : is an <



/' Customer '/
Customer -- "1" Name : has >
Customer -- "1" CustomerId : has >
Customer -- "1" Gender : has >
Customer -- "1..*" PostalAddress : has >
Customer -- "1" BirthDate : dateOfBirth >
Customer -- "1" PhoneNumber: has >
Customer -- "1" EmailAddress: has >
Customer -- "0..*" Survey : answers >
Customer -- "1" VATIdentifier : has >


/' Product '/
Product --- "1..*" Category: belongs to >
Product --- "1..*" Picture: has >
Product --- "1" Barcode: has >
Product --- "1" Brand: has >
ProductPriceDetail -- "1" Product: <
ProductPriceDetail --- "1..*" PriceTable: >
PriceTable --- "1" PriceTableID: >
PriceTable --- "1" SalesRegion: >
Product --- "1" ProductItem: becomes >
ProductItem --- "1" Quantity: has >
ProductItem --- "1" PriceItem : has >
ProductItem --- "1" ProductItemID : has >
Product --- "1" Reference: has >
Product --- "1" UniqueInternalCode: has >
Product --- Dimensions: has >
Product --- "1" Weight: has >
Product --- "1" Volume: has >

/'ShoppingCart '/
ShoppingCart --- "1..*" ProductItem: has >
ShoppingCart --- "1" ShoppingCartID: has >



/' Category '/
Category --- "1" AlphaNumericCode  : categorized >
Category --- "1" Description  : categorized >
Category "0..1" --- "1" Category: is sub-category of >


/' Warehouse '/
AGV -- "1..*" Route: has >
AGV -- "1" Identifier: caracterized >
AGV -- "1" Model: has >
Warehouse -- "1" Plan: >
AGV -- "1" MaxWeightCarry : has >
AGV -- "1" AGVDock : has >
AGV -- "1" Task : performs >
AGV_Warehouse -- AGV: is >
Warehouse -- "1..*" AGV_Warehouse: knows >
Plan -- Location: has >


/' Survey '/
Survey -- "1..*" SurveyRule: has >
Survey -- "1" SurveyDescription: has >
Survey -- "1" SurveyAlphaNumericCode: caracterized >
Survey -- "1" SurveyPeriod: has >
Survey -- "1" Topic: has >
Survey -- "1..*" GeneralQuestions: has >

Question -- Question: depends >

LineOrder --- "1" Order: >
LineOrder --- "1" ProductItem: has >

/' ShippingCost '/
ShippingCost --- Weight: depends >
ShippingCost --- Volume: depends >


/' Order '/
Order --- "1" OrderID : >ShoppingCart
Order --- "1" Status : has >
Order --- "1" OrderActor : has >
Order --- "1" PaymentMethod : has >

Order --- "1" ShippingMethod : has >
Order --- "1" Survey : generates >
ShippingCost --- "1" SalesRegion: depends >
ShippingMethod--- "1" ShippingCost: has >


PriceOrder --- Order: depends >
PriceOrder --- ShippingCost: depends >




/'  Question '/
Question --- "1..*" Answer: has >
Question --- "1" GeneralQuestions: is <
Answer --- "1" Type: has >



/' Joined Aggregates '/
Customer "1" -- "0..*" Order: places >
Customer "1" -- "0..*" Product: chooses >
Warehouse -- "1..*" StorageArea: contains >
StorageArea -- "1..*" Product: stores >
@enduml